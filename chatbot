import requests
import tkinter as tk
from tkinter import scrolledtext

# Your OpenWeatherMap API key
API_KEY = '4f1a812449f015a5a8f417d450493ed0'

def get_weather_openweathermap(city):
    """Fetch the weather information from OpenWeatherMap API."""
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric"
    try:
        response = requests.get(url)
        response.raise_for_status()  # Raise an exception for HTTP errors
        
        # Print the status code and response for debugging
        print(f"HTTP Status Code: {response.status_code}")
        print(f"Response Content: {response.text}")
        
        data = response.json()
        
        if response.status_code == 200:
            temp = data['main']['temp']
            weather_description = data['weather'][0]['description']
            return f"The current weather in {city} is {weather_description} with a temperature of {temp}Â°C."
        else:
            return f"Failed to retrieve weather information. Status code: {response.status_code}. Response: {data}"
    except requests.exceptions.RequestException as e:
        return f"An error occurred: {str(e)}"

class Chatbot:
    def __init__(self, root):
        """Initialize the chatbot GUI."""
        self.root = root
        self.root.title("Chatbot")

        # Chat display area
        self.chat_display = scrolledtext.ScrolledText(self.root, state='disabled', height=20, width=50)
        self.chat_display.grid(row=0, column=0, columnspan=2)

        # User input field
        self.user_input = tk.Entry(self.root, width=40)
        self.user_input.grid(row=1, column=0)

        # Send button
        self.send_button = tk.Button(self.root, text="Send", command=self.get_response)
        self.send_button.grid(row=1, column=1)

        # Predefined responses
        self.responses = {
            "hello": "Hi there! How can I help you today?",
            "how are you": "I'm just a bot, but I'm doing great! How about you?",
            "what is your name": "I am your friendly chatbot. What's your name?",
            "your name": "I am your friendly chatbot. What's your name?",
            "what can you do": "I can provide weather information and chat with you!",
            "bye": "Goodbye! Have a great day!"
        }
        self.user_name = None

    def get_response(self):
        """Handle user input and generate a response."""
        user_message = self.user_input.get()
        self.chat_display.config(state='normal')
        self.chat_display.insert(tk.END, "You: " + user_message + "\n")
        response = self.generate_response(user_message)
        self.chat_display.insert(tk.END, "Bot: " + response + "\n")
        self.chat_display.config(state='disabled')
        self.user_input.delete(0, tk.END)
        self.chat_display.yview(tk.END)

    def generate_response(self, message):
        """Generate a response based on the user message."""
        message = message.lower()

        # Check for user name
        if "name" in message and "your" in message:
            return "I am your friendly chatbot. What's your name?"

        # Check if the user has provided their name
        if self.user_name and "name" in message:
            return f"Nice to meet you, {self.user_name}!"

        # Handle weather queries
        if "weather in" in message:
            city = message.split("weather in")[-1].strip()
            return get_weather_openweathermap(city)

        # Check predefined responses
        response = self.responses.get(message, None)
        if response:
            return response
        
        # Handle user name introduction
        if "my name is" in message:
            self.user_name = message.split("my name is")[-1].strip()
            return f"Nice to meet you, {self.user_name}!"

        return "Sorry, I didn't understand that."

if __name__ == "__main__":
    root = tk.Tk()
    chatbot = Chatbot(root)
    root.mainloop()
